{"remainingRequest":"/Users/qinnan/Desktop/hospital/node-app/client/node_modules/babel-loader/lib/index.js!/Users/qinnan/Desktop/hospital/node-app/client/src/store.js","dependencies":[{"path":"/Users/qinnan/Desktop/hospital/node-app/client/src/store.js","mtime":1540560666182},{"path":"/Users/qinnan/Desktop/hospital/node-app/client/node_modules/cache-loader/dist/cjs.js","mtime":1539743026284},{"path":"/Users/qinnan/Desktop/hospital/node-app/client/node_modules/babel-loader/lib/index.js","mtime":1539743026004}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/qinnan/Desktop/hospital/node-app/client/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n\nvar _mutations;\n\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nvar types = {\n  SET_AUTNENTIATED: 'SET_AUTNENTIATED',\n  // 是否认证通过\n  SET_USER: 'SET_USER',\n  // 用户信息\n  SET_PATIENTUSER: 'SET_PATIENTUSER'\n};\nvar state = {\n  // 需要维护的状态\n  isAutnenticated: false,\n  // 是否认证\n  user: {},\n  // 当解析token后，得到对应的用户信息，存储用户信息\n  patinentUserId: ''\n};\nvar getters = {\n  isAutnenticated: function isAutnenticated(state) {\n    return state.isAutnenticated;\n  },\n  user: function user(state) {\n    return state.user;\n  },\n  patinentUserId: function patinentUserId(state) {\n    return state.patinentUserId;\n  }\n};\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_AUTNENTIATED, function (state, isAutnenticated) {\n  if (isAutnenticated) state.isAutnenticated = isAutnenticated;else state.isAutnenticated = false;\n}), _defineProperty(_mutations, types.SET_USER, function (state, user) {\n  if (user) state.user = user;else state.user = {};\n}), _defineProperty(_mutations, types.SET_PATIENTUSER, function (state, patinentUserId) {\n  if (patinentUserId) {\n    state.patinentUserId = patinentUserId;\n  } else {\n    state.patinentUser = \"\";\n  }\n}), _mutations); //异步操作\n\nvar actions = {\n  setIsAutnenticated: function setIsAutnenticated(_ref, isAutnenticated) {\n    var commit = _ref.commit;\n    commit(types.SET_AUTNENTIATED, isAutnenticated);\n  },\n  setUser: function setUser(_ref2, user) {\n    var commit = _ref2.commit;\n    commit(types.SET_USER, user);\n  },\n  clearCurrentState: function clearCurrentState(_ref3) {\n    var commit = _ref3.commit;\n    commit(types.SET_AUTNENTIATED, false);\n    commit(types.SET_USER, null);\n  },\n  setpatinentUserId: function setpatinentUserId(_ref4, patinentUserId) {\n    var commit = _ref4.commit;\n    commit(types.SET_PATIENTUSER, patinentUserId);\n  }\n};\nexport default new Vuex.Store({\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n});",{"version":3,"sources":["/Users/qinnan/Desktop/hospital/node-app/client/src/store.js"],"names":["Vue","Vuex","use","types","SET_AUTNENTIATED","SET_USER","SET_PATIENTUSER","state","isAutnenticated","user","patinentUserId","getters","mutations","patinentUser","actions","setIsAutnenticated","commit","setUser","clearCurrentState","setpatinentUserId","Store"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,IAAIE,GAAJ,CAAQD,IAAR;AAEA,IAAME,QAAQ;AACVC,oBAAkB,kBADR;AAC4B;AACtCC,YAAU,UAFA;AAEY;AACtBC,mBAAiB;AAHP,CAAd;AAMA,IAAIC,QAAQ;AAAE;AACVC,mBAAiB,KADT;AACiB;AACzBC,QAAM,EAFE;AAEI;AACZC,kBAAgB;AAHR,CAAZ;AAMA,IAAMC,UAAU;AACZH,mBAAiB;AAAA,WAASD,MAAMC,eAAf;AAAA,GADL;AAEZC,QAAM;AAAA,WAASF,MAAME,IAAf;AAAA,GAFM;AAGZC,kBAAgB;AAAA,WAASH,MAAMG,cAAf;AAAA;AAHJ,CAAhB;AAMA,IAAME,0DACDT,MAAMC,gBADL,YACuBG,KADvB,EAC8BC,eAD9B,EAC+C;AAC7C,MAAIA,eAAJ,EACID,MAAMC,eAAN,GAAwBA,eAAxB,CADJ,KAGID,MAAMC,eAAN,GAAwB,KAAxB;AACP,CANC,+BAODL,MAAME,QAPL,YAOeE,KAPf,EAOsBE,IAPtB,EAO4B;AAC1B,MAAIA,IAAJ,EACIF,MAAME,IAAN,GAAaA,IAAb,CADJ,KAGIF,MAAME,IAAN,GAAa,EAAb;AACP,CAZC,+BAaDN,MAAMG,eAbL,YAasBC,KAbtB,EAa6BG,cAb7B,EAa6C;AAC3C,MAAIA,cAAJ,EAAoB;AAChBH,UAAMG,cAAN,GAAuBA,cAAvB;AACH,GAFD,MAGK;AACDH,UAAMM,YAAN,GAAqB,EAArB;AACH;AACJ,CApBC,cAAN,C,CAuBA;;AACA,IAAMC,UAAU;AACZC,sBAAoB,kCAAWP,eAAX,EAA+B;AAAA,QAA7BQ,MAA6B,QAA7BA,MAA6B;AAC/CA,WAAOb,MAAMC,gBAAb,EAA+BI,eAA/B;AACH,GAHW;AAIZS,WAAS,wBAAWR,IAAX,EAAoB;AAAA,QAAlBO,MAAkB,SAAlBA,MAAkB;AACzBA,WAAOb,MAAME,QAAb,EAAuBI,IAAvB;AACH,GANW;AAOZS,qBAAmB,kCAAc;AAAA,QAAZF,MAAY,SAAZA,MAAY;AAC7BA,WAAOb,MAAMC,gBAAb,EAA+B,KAA/B;AACAY,WAAOb,MAAME,QAAb,EAAuB,IAAvB;AACH,GAVW;AAWZc,qBAAmB,kCAAWT,cAAX,EAA8B;AAAA,QAA5BM,MAA4B,SAA5BA,MAA4B;AAC7CA,WAAOb,MAAMG,eAAb,EAA8BI,cAA9B;AACH;AAbW,CAAhB;AAgBA,eAAe,IAAIT,KAAKmB,KAAT,CAAe;AAC1Bb,cAD0B;AAE1BI,kBAF0B;AAG1BC,sBAH0B;AAI1BE;AAJ0B,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nconst types = {\n    SET_AUTNENTIATED: 'SET_AUTNENTIATED', // 是否认证通过\n    SET_USER: 'SET_USER', // 用户信息\n    SET_PATIENTUSER: 'SET_PATIENTUSER'\n}\n\nvar state = { // 需要维护的状态\n    isAutnenticated: false,  // 是否认证\n    user: {},   // 当解析token后，得到对应的用户信息，存储用户信息\n    patinentUserId: ''\n}\n\nconst getters = {\n    isAutnenticated: state => state.isAutnenticated,\n    user: state => state.user,\n    patinentUserId: state => state.patinentUserId\n}\n\nconst mutations = {\n    [types.SET_AUTNENTIATED](state, isAutnenticated) {\n        if (isAutnenticated)\n            state.isAutnenticated = isAutnenticated\n        else\n            state.isAutnenticated = false\n    },\n    [types.SET_USER](state, user) {\n        if (user)\n            state.user = user\n        else\n            state.user = {}\n    },\n    [types.SET_PATIENTUSER](state, patinentUserId) {\n        if (patinentUserId) {\n            state.patinentUserId = patinentUserId\n        }\n        else {\n            state.patinentUser = \"\"\n        }\n    }\n}\n\n//异步操作\nconst actions = {\n    setIsAutnenticated: ({commit}, isAutnenticated) => {\n        commit(types.SET_AUTNENTIATED, isAutnenticated)\n    },\n    setUser: ({commit}, user) => {\n        commit(types.SET_USER, user)\n    },\n    clearCurrentState: ({commit}) => {\n        commit(types.SET_AUTNENTIATED, false)\n        commit(types.SET_USER, null)\n    },\n    setpatinentUserId: ({commit}, patinentUserId) => {\n        commit(types.SET_PATIENTUSER, patinentUserId)\n    },\n}\n\nexport default new Vuex.Store({\n    state,\n    getters,\n    mutations,\n    actions\n})\n"]}]}