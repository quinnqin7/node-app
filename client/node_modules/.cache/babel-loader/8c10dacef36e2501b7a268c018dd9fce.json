{"remainingRequest":"/Users/qinnan/Desktop/hospital/hs5/node-app/client/node_modules/babel-loader/lib/index.js!/Users/qinnan/Desktop/hospital/hs5/node-app/client/src/store.js","dependencies":[{"path":"/Users/qinnan/Desktop/hospital/hs5/node-app/client/src/store.js","mtime":1539570620653},{"path":"/Users/qinnan/Desktop/hospital/hs5/node-app/client/node_modules/cache-loader/dist/cjs.js","mtime":1539508823895},{"path":"/Users/qinnan/Desktop/hospital/hs5/node-app/client/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/qinnan/Desktop/hospital/hs5/node-app/client/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations;\n\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nvar types = {\n  SET_AUTNENTIATED: 'SET_AUTNENTIATED',\n  // 是否认证通过\n  SET_USER: 'SET_USER' // 用户信息\n\n};\nvar state = {\n  // 需要维护的状态\n  isAutnenticated: false,\n  // 是否认证\n  user: {} // 存储用户信息\n\n};\nvar getters = {\n  isAutnenticated: function isAutnenticated(state) {\n    return state.isAutnenticated;\n  },\n  user: function user(state) {\n    return state.user;\n  }\n};\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_AUTNENTIATED, function (state, isAutnenticated) {\n  if (isAutnenticated) state.isAutnenticated = isAutnenticated;else state.isAutnenticated = false;\n}), _defineProperty(_mutations, types.SET_USER, function (state, user) {\n  if (user) state.user = user;else state.user = {};\n}), _mutations);\nvar actions = {\n  setIsAutnenticated: function setIsAutnenticated(_ref, isAutnenticated) {\n    var commit = _ref.commit;\n    commit(types.SET_AUTNENTIATED, isAutnenticated);\n  },\n  setUser: function setUser(_ref2, user) {\n    var commit = _ref2.commit;\n    commit(types.SET_USER, user);\n  },\n  clearCurrentState: function clearCurrentState(_ref3) {\n    var commit = _ref3.commit;\n    commit(types.SET_AUTNENTIATED, false);\n    commit(types.SET_USER, null);\n  }\n};\nexport default new Vuex.Store({\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n});",{"version":3,"sources":["/Users/qinnan/Desktop/hospital/hs5/node-app/client/src/store.js"],"names":["Vue","Vuex","use","types","SET_AUTNENTIATED","SET_USER","state","isAutnenticated","user","getters","mutations","actions","setIsAutnenticated","commit","setUser","clearCurrentState","Store"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,IAAIE,GAAJ,CAAQD,IAAR;AAEA,IAAME,QAAQ;AACZC,oBAAkB,kBADN;AAC0B;AACtCC,YAAU,UAFE,CAES;;AAFT,CAAd;AAKA,IAAMC,QAAQ;AAAE;AACdC,mBAAiB,KADL;AACa;AACzBC,QAAM,EAFM,CAED;;AAFC,CAAd;AAKA,IAAMC,UAAU;AACdF,mBAAiB;AAAA,WAASD,MAAMC,eAAf;AAAA,GADH;AAEdC,QAAM;AAAA,WAASF,MAAME,IAAf;AAAA;AAFQ,CAAhB;AAKA,IAAME,0DACHP,MAAMC,gBADH,YACqBE,KADrB,EAC4BC,eAD5B,EAC6C;AAC/C,MAAIA,eAAJ,EACED,MAAMC,eAAN,GAAwBA,eAAxB,CADF,KAGED,MAAMC,eAAN,GAAwB,KAAxB;AACH,CANG,+BAOHJ,MAAME,QAPH,YAOaC,KAPb,EAOoBE,IAPpB,EAO0B;AAC5B,MAAIA,IAAJ,EACEF,MAAME,IAAN,GAAaA,IAAb,CADF,KAGEF,MAAME,IAAN,GAAa,EAAb;AACH,CAZG,cAAN;AAeA,IAAMG,UAAU;AACdC,sBAAoB,kCAAaL,eAAb,EAAiC;AAAA,QAA9BM,MAA8B,QAA9BA,MAA8B;AACnDA,WAAOV,MAAMC,gBAAb,EAA+BG,eAA/B;AACD,GAHa;AAIdO,WAAS,wBAAaN,IAAb,EAAsB;AAAA,QAAnBK,MAAmB,SAAnBA,MAAmB;AAC7BA,WAAOV,MAAME,QAAb,EAAuBG,IAAvB;AACD,GANa;AAOdO,qBAAmB,kCAAgB;AAAA,QAAbF,MAAa,SAAbA,MAAa;AACjCA,WAAOV,MAAMC,gBAAb,EAA+B,KAA/B;AACAS,WAAOV,MAAME,QAAb,EAAuB,IAAvB;AACD;AAVa,CAAhB;AAaA,eAAe,IAAIJ,KAAKe,KAAT,CAAe;AAC5BV,cAD4B;AAE5BG,kBAF4B;AAG5BC,sBAH4B;AAI5BC;AAJ4B,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nconst types = {\n  SET_AUTNENTIATED: 'SET_AUTNENTIATED', // 是否认证通过\n  SET_USER: 'SET_USER' // 用户信息\n}\n\nconst state = { // 需要维护的状态\n  isAutnenticated: false,  // 是否认证\n  user: {}   // 存储用户信息\n}\n\nconst getters = {\n  isAutnenticated: state => state.isAutnenticated,\n  user: state => state.user\n}\n\nconst mutations = {\n  [types.SET_AUTNENTIATED](state, isAutnenticated) {\n    if (isAutnenticated)\n      state.isAutnenticated = isAutnenticated\n    else\n      state.isAutnenticated = false\n  },\n  [types.SET_USER](state, user) {\n    if (user)\n      state.user = user\n    else\n      state.user = {}\n  }\n}\n\nconst actions = {\n  setIsAutnenticated: ({ commit }, isAutnenticated) => {\n    commit(types.SET_AUTNENTIATED, isAutnenticated)\n  },\n  setUser: ({ commit }, user) => {\n    commit(types.SET_USER, user)\n  },\n  clearCurrentState: ({ commit }) => {\n    commit(types.SET_AUTNENTIATED, false)\n    commit(types.SET_USER, null)\n  }\n}\n\nexport default new Vuex.Store({\n  state,\n  getters,\n  mutations,\n  actions\n})\n"]}]}